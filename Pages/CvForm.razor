@page "/cvform"
@inject IJSRuntime JSRuntime;
<h3>Make Your Great CV!</h3>

<div class="progress">
    <div class="progress-bar" role="progressbar" style="width: @progressBarPercentage%;" aria-valuenow="@progressBarPercentage" aria-valuemin="0" aria-valuemax="100"></div>
</div>

<div class="mx-auto">

    @switch (CurrentState)
    {
        case State.personalData:

            <div class="@PageAnimation[0] col-sm-12 col-md-9 col-lg-6 col-xl-4 mx-auto my-5">
                <p class="font-weight-light lead">Your personal info</p>
                <div class="form-group">
                    <label asp-for="CvDataItem.Name">Name</label>
                    <input type="text" @bind="name" class="form-control" placeholder="">
                </div>
                <div class="form-group">
                    <label asp-for="CvDataItem.Surname">Surname</label>
                    <input type="text" @bind="surname" class="form-control" placeholder="">
                </div>
                <div class="form-group">
                    <label asp-for="CvDataItem.Email">Email address</label>
                    <input type="email" @bind="email" class="form-control" placeholder="Enter email">
                </div>
                <div class="form-group">
                    <label asp-for="CvDataItem.PhoneNumber">Phone Number</label>
                    <input type="tel" @bind="phoneNumber" class="form-control" aria-describedby="phoneEmailHelp" placeholder="Enter 9 digits number">
                    <small id="phoneEmailHelp" class="form-text text-muted">We'll never share your data with anyone else. It's used for your future employer!</small>
                </div>

                <button @onclick="NextPage" class="btn btn-primary">Next</button>
            </div>

            break;
        case State.experience:
            <div class="@PageAnimation[1] col-sm-12 col-md-9 col-lg-6 col-xl-4 mx-auto my-5 mx-auto my-5">
                <p class="font-weight-light lead">Your Experience</p>

                @foreach (var experience in experiences)
                {
                    <div class="fade-in">
                        <div class="form-group">
                            <label asp-for="CvDataItem.Experience.Name">Workplace / Company name</label>
                            <input type="text" @bind="experience.Name" class="form-control" placeholder="">
                        </div>
                        <div class="form-group">
                            <label asp-for="CvDataItem.Experience.From">Started</label>
                            <input type="date" @bind="experience.From" class="form-control" placeholder="Enter school starting date">
                        </div>
                        @if (!experience.StillWorkingStudying)
                        {
                            <div class="form-group">
                                <label asp-for="CvDataItem.Experience.To">Finished</label>
                                <input type="date" @bind="experience.To" class="form-control" placeholder="Enter graduation/ date">
                            </div>
                        }
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" @bind="experience.StillWorkingStudying" />
                            <label asp-for="CvDataItem.Experience.StillWorkingStudying">Still working there?</label>
                        </div>
                        <div class="form-group">
                            <label asp-for="CvDataItem.Experience.Description">Additional info (optional)</label>
                            <textarea type="text" @bind="experience.Description" class="form-control input-group" placeholder="..." rows="3"></textarea>
                        </div>
                        <button @onclick="@(e => experiences.Remove(experience))" class="btn btn-danger my-3">Delete this school</button>
                    </div>
                }
                <button @onclick="@( e => experiences.Add(new CvDataItem.Experience()) )" class="btn btn-success">Add work Place</button>
                <button @onclick="PreviousPage" class="btn btn-primary">Previous</button>
                <button @onclick="NextPage" class="btn btn-primary">Next</button>
            </div>
            break;

        case State.education:
            <div class="@PageAnimation[(int)CurrentState] col-sm-12 col-md-9 col-lg-6 col-xl-4 mx-auto my-5">
                <p class="font-weight-light lead">Your Education</p>

                @foreach (var education in educations)
                {
                    <div class="fade-in">
                        <div class="form-group">
                            <label asp-for="CvDataItem.Education.Name">School Name</label>
                            <input type="text" @bind="education.Name" class="form-control" placeholder="">
                        </div>
                        <div class="form-group">
                            <label asp-for="CvDataItem.Education.From">Started</label>
                            <input type="date" @bind="education.From" class="form-control" placeholder="Enter school starting date">
                        </div>
                        @if (!education.StillWorkingStudying)
                        {
                            <div class="form-group">
                                <label asp-for="CvDataItem.Education.To">Finished</label>
                                <input type="date" @bind="education.To" class="form-control" placeholder="Enter graduation/ date">
                            </div>
                        }
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" @bind="education.StillWorkingStudying" />
                            <label asp-for="CvDataItem.Experience.StillWorkingStudying">Still studying there?</label>
                        </div>

                        <div class="form-group">
                            <label asp-for="CvDataItem.Education.Degree">Degree/School level</label>
                            <select class="form-control input-group" @bind="education.Degree" id="exampleFormControlSelect1">
                                <option>Middle school</option>
                                <option>High school</option>
                                <option>Bachelor of Arts (BA)</option>
                                <option>Bachelor of Science (BSc)</option>
                                <option>Master's degree</option>
                                <option>Master of Business Administration (MBA)</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label asp-for="CvDataItem.Education.To">Additional info (optional)</label>
                            <textarea type="text" @bind="education.Description" class="form-control input-group" placeholder="..." rows="3"></textarea>
                            <button @onclick="@(e => educations.Remove(education))" class="btn btn-danger my-3">Delete this school</button>
                        </div>
                    </div>
                }
                <button @onclick="@( e => educations.Add(new CvDataItem.Education()) )" class="btn btn-success">Add school</button>
                <button @onclick="PreviousPage" class="btn btn-primary">Previous</button>
                <button @onclick="NextPage" class="btn btn-primary">Next</button>
            </div>
            break;

        case State.languages:
            <div class="@PageAnimation[(int)CurrentState] col-sm-12 col-md-9 col-lg-6 col-xl-4 mx-auto my-5">
                <p class="font-weight-light lead">Languages</p>

                @foreach (var language in languages)
                {
                    <div class="fade-in">
                        <label asp-for="CvDataItem.Language.Name">School Name</label>
                        <input type="text" @bind="language.Name" class="form-control input-group" placeholder="">

                        <label asp-for="CvDataItem.Language.Description">Description/level (optional)</label>
                        <input type="text" @bind="language.Description" class="form-control input-group" placeholder="...">
                        <button @onclick="@(e => languages.Remove(language))" class="btn btn-danger my-3">Delete this Language</button>
                    </div>
                }

                <div class="my-3">
                    <button @onclick="@( e => languages.Add(new CvDataItem.Language()) )" class="btn btn-success">Add Language</button>
                    <button @onclick="PreviousPage" class="btn btn-primary">Previous</button>
                    <button @onclick="NextPage" class="btn btn-primary">Finish</button>
                </div>
            </div>
            break;


        case State.skills:
            <div class="@PageAnimation[3] col-sm-12 col-md-9 col-lg-6 col-xl-4  mx-auto my-5">
                <p class="font-weight-light lead">Additional Skills</p>

                @foreach (var skill in skills)
                {
                    <div class="fade-in">
                        <label asp-for="CvDataItem.Education.Name">School Name</label>
                        <input type="text" @bind="skill.Name" class="form-control input-group" placeholder="">

                        <label asp-for="CvDataItem.Education.To">Description/level (optional)</label>
                        <input type="text" @bind="skill.Description" class="form-control input-group" placeholder="...">
                        <button @onclick="@(e => skills.Remove(skill))" class="btn btn-danger my-3">Delete this skill</button>
                    </div>
                }

                <div class="my-3">
                    <button @onclick="@( e => skills.Add(new CvDataItem.Skill()) )" class="btn btn-success">Add skill</button>
                    <button @onclick="PreviousPage" class="btn btn-primary">Previous</button>
                    <button @onclick="NextPage" class="btn btn-primary">Finish</button>
                </div>
            </div>
            break;

        case State.summary:
            <div class="@PageAnimation[3] mx-auto my-5">
                <p class="font-weight-light lead text-center">Summary</p>
                <div>
                    <span>Options</span>
                    <button @onclick="@(e => { currentColor = ( currentColor < colorMotives.Length-1) ? ++currentColor : 0; })" class="btn btn-primary">Change motive color</button>
                </div>
                <div id="CvSummary" class="p-5">

                    <div class="border rounded @colorMotives[currentColor]">
                        <div class="m-@marginsize p-@paddingSize">
                            <h4 class="">@(name + surname)</h4>
                            <hr class="m-3">
                            <small class="font-weight-light">Email: @email Phone Number: @phoneNumber</small>
                        </div>
                    </div>

                    <hr class="m-3">

                    <div class="border rounded">
                        <div class="m-@marginsize p-@paddingSize">
                            <h6 class="px-1 lead rounded @colorMotives[currentColor] ">Experience</h6>
                            @foreach (var experience in experiences)
                            {

                                <span class="lead">@experience.Name</span>
                                <div class="font-weight-light">
                                    @experience.From.ToShortDateString() To @if (experience.StillWorkingStudying)
                                    {
                                        <span>now</span>}
                                    else
                                    { experience.To.ToShortDateString(); }
                                </div>
                                @if (!string.IsNullOrEmpty(experience.Description))
                                {
                                    <div class="font-weight-light"> about: @experience.Description</div>}

                            }
                        </div>
                    </div>

                    <hr class="m-3">

                    <div class="border rounded">
                        <div class="m-@marginsize p-@paddingSize">
                            <h6 class="px-1 lead rounded @colorMotives[currentColor]">Education</h6>
                            @foreach (var education in educations)
                            {
                                <span class="lead">@education.Name</span>
                                <span class="lead">@education.Degree</span>
                                <div class="font-weight-light">
                                    @education.From.ToShortDateString() To  @if (education.StillWorkingStudying)
                                    {
                                        <span>now</span>}
                                    else
                                    { education.To.ToShortDateString(); }
                                </div>
                                @if (!string.IsNullOrEmpty(education.Description))
                                {
                                    <div class="font-weight-light"> about: @education.Description</div>}
                            }
                        </div>
                    </div>
                    <hr class="m-3">
                    <div class="border rounded">
                        <div class="m-@marginsize p-@paddingSize">
                            <h6 class="px-1 lead rounded @colorMotives[currentColor]">Languages</h6>
                            @foreach (var language in languages)
                            {
                                <p>@language.Name Description:@language.Description</p>
                            }
                        </div>
                    </div>
                    <hr class="m-3">
                    <div class="border rounded">
                        <div class="m-@marginsize p-@paddingSize">
                            <h6 class="px-1 lead rounded @colorMotives[currentColor]">Additional skills</h6>
                            @foreach (var skill in skills)
                            {
                                <p>@skill.Name Description:@skill.Description</p>
                            }
                        </div>
                    </div>
                </div>
                <button @onclick="PreviousPage" class="btn btn-primary">Previous</button>
                <button @onclick="DownloadCv" class="btn btn-primary">Save & Download</button>

            </div>
            break;

        default:
            <p class="lead">Thank you for using my application</p>
            break;

    }
</div>

@code {

    private string[] PageAnimation = { "fade-in", "fade-in", "fade-in", "fade-in", "fade-in", "fade-in" };
    public enum State { personalData, experience, education, languages, skills, summary };
    [Parameter]
    public State CurrentState { get; set; } = State.personalData;
    private int progressBarPercentage = 0;

    private string name { get; set; }
    private string surname { get; set; }
    private string email { get; set; }
    private string phoneNumber { get; set; }
    [Parameter]
    public IList<CvDataItem.Education> educations { get; set; } = new List<CvDataItem.Education>();
    private IList<CvDataItem.Experience> experiences { get; set; } = new List<CvDataItem.Experience>();
    private IList<CvDataItem.Skill> skills { get; set; } = new List<CvDataItem.Skill>();
    private IList<CvDataItem.Language> languages { get; set; } = new List<CvDataItem.Language>();
    private int barIncrement = 100 / Enum.GetNames(typeof(State)).Length; // number of states are used to determine the width of progress bar increment
    private int paddingSize = 2;
    private int marginsize = 2;
    private int currentColor = 0;
    private string[] colorMotives = { "bg-primary text-white", "bg-secondary text-white", "bg-success text-white",
                                      "bg-danger text-white", "bg-warning text-dark", "bg-info text-white",
                                      "bg-light text-dark", "bg-dark text-white", "bg-white text-dark" };


    private void NextPage(MouseEventArgs e)
    {
        PageAnimation[(int)CurrentState] = "fade-in";
        CurrentState++;

        progressBarPercentage = (int)CurrentState * barIncrement;
    }

    private void PreviousPage(MouseEventArgs e)
    {
        PageAnimation[(int)CurrentState] = "fade-in";
        CurrentState--;
        progressBarPercentage = (int)CurrentState * barIncrement;
    }
    public async Task DownloadCv(MouseEventArgs e)
    {
        await JSRuntime.InvokeVoidAsync("getCvAsPdf");
    }
}
